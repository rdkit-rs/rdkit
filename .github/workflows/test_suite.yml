name: Tests, Clippy, and Format

on:
  pull_request: { }

env:
  REGISTRY: ghcr.io
  REPO_LOWER: rdkit-rs/cheminee

jobs:
  test_suite:
    runs-on: buildjet-16vcpu-ubuntu-2204
    env:
      ARCH: amd64
      DEBIAN_FRONTEND: noninteractive
    permissions:
      contents: read
      packages: write
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Run sccache-cache
        uses: mozilla/sccache-action@eaed7fb9f8fb32adea8bd40d7f276f312de9beaf
        with:
          version: "v0.4.0-pre.10"

      - name: Run sccache stat for check
        shell: bash
        run: ${SCCACHE_PATH} --show-stats

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev libboost-iostreams-dev libboost-serialization-dev pkg-config curl tar

      - name: Install RDKit
        run: |
          cd /tmp
          if [ $(dpkg --print-architecture) = "amd64" ]; then
            curl -O https://rdkit-rs-debian.s3.eu-central-1.amazonaws.com/rdkit_2024_03_3_ubuntu_14_04_amd64.tar.gz
            sudo tar xf rdkit_2024_03_3_ubuntu_14_04_amd64.tar.gz
          else
            curl -O https://rdkit-rs-debian.s3.eu-central-1.amazonaws.com/rdkit_2024_03_3_ubuntu_14_04_arm64.tar.gz
            sudo tar xf rdkit_2024_03_3_ubuntu_14_04_arm64.tar.gz
          fi
          sudo mv /tmp/rdkit-Release_2024_03_3/Code /usr/local/include/rdkit
          sudo mv /tmp/rdkit-Release_2024_03_3/build/lib/* /usr/lib/

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cargo test
        run: |
          RUST_WRAPPER=$SCCACHE_PATH cargo clean
          RUST_WRAPPER=$SCCACHE_PATH cargo test --workspace

  convention_checker:
    env:
      ARCH: amd64
    runs-on: buildjet-16vcpu-ubuntu-2204
    permissions:
      contents: read
      packages: write
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Run sccache-cache
        uses: mozilla/sccache-action@eaed7fb9f8fb32adea8bd40d7f276f312de9beaf
        with:
          version: "v0.4.0-pre.10"

      - name: Run sccache stat for check
        shell: bash
        run: ${SCCACHE_PATH} --show-stats

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev libboost-iostreams-dev libboost-serialization-dev pkg-config curl tar

      - name: Install RDKit
        run: |
          cd /tmp
          if [ $(dpkg --print-architecture) = "amd64" ]; then
            curl -O https://rdkit-rs-debian.s3.eu-central-1.amazonaws.com/rdkit_2024_03_3_ubuntu_14_04_amd64.tar.gz
            sudo tar xf rdkit_2024_03_3_ubuntu_14_04_amd64.tar.gz
          else
            curl -O https://rdkit-rs-debian.s3.eu-central-1.amazonaws.com/rdkit_2024_03_3_ubuntu_14_04_arm64.tar.gz
            sudo tar xf rdkit_2024_03_3_ubuntu_14_04_arm64.tar.gz
          fi
          sudo mv /tmp/rdkit-Release_2024_03_3/Code /usr/local/include/rdkit
          sudo mv /tmp/rdkit-Release_2024_03_3/build/lib/* /usr/lib/

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Rust Format Check
        run: |
          RUST_WRAPPER=$SCCACHE_PATH cargo fmt --check
          pushd rdkit-sys
          RUST_WRAPPER=$SCCACHE_PATH cargo fmt --check
          popd

      - name: Clippy Check
        run: |
          RUST_WRAPPER=$SCCACHE_PATH cargo clippy
          pushd rdkit-sys
          RUST_WRAPPER=$SCCACHE_PATH cargo clippy
          popd